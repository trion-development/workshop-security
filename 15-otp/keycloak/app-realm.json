{
  "id" : "app",
  "realm" : "app",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "e7891603-db5d-4440-8b16-352c624be98c",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "app",
      "attributes" : { }
    }, {
      "id" : "0e340b87-627c-4876-b134-8f863bc83ddb",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "app",
      "attributes" : { }
    }, {
      "id" : "bc6ca11f-5f5c-442f-8f9f-20991c0e13ae",
      "name" : "default-roles-pt",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "app",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "ce894a8c-8de2-4b29-8762-75a75dbc04f9",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "01e9ea77-e34e-475f-bc3f-4d442ba6e698",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "c6fc8792-5d98-4960-a337-aeae191f1356",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "e2b69ad1-1a10-4ec7-b723-13b631ce6554",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "5857c243-844e-404f-90b9-cc4fd5ce33ee",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "52ac0759-cda2-48bb-899b-b7826d626161",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "4960b2f8-51a2-4c8b-9288-e4c71e2d9880",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "4e702cac-0471-417d-84ec-d71a4c8f5c5d",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-users", "manage-realm", "view-events", "impersonation", "query-realms", "view-authorization", "manage-users", "create-client", "manage-authorization", "view-clients", "query-users", "manage-events", "view-realm", "manage-identity-providers", "view-identity-providers", "query-groups", "query-clients", "manage-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "a9844d75-131f-441d-ae57-8fc797c9cf89",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "0844b4f7-6bac-4945-a2b0-06424c837087",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "a888c0b0-fa72-4575-b3d7-3c8102bb7867",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "0202e08b-eec0-4b91-91e2-178d9df7cf95",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "69ef639c-43cc-4f5e-8928-66238ace6215",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "4af0c169-469b-464b-8014-3ca24fcefbd9",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "ddb38f3f-b83a-4421-93c5-206418aaf531",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "707cbba0-ca49-4848-9fe8-dd2580c1b35e",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "96f81c5b-20e7-447c-a343-4816e37cf960",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "125af241-32e2-43b5-8818-984c6e3723fc",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      }, {
        "id" : "e14474ca-ee65-4d40-9a99-04984b40a274",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
        "attributes" : { }
      } ],
      "app-client" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "75f81880-a4d2-4ec5-835c-799bba9e4d8d",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ae993184-4df4-4114-8762-2f518ff8b5af",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "01e1df44-ea2b-45af-8b13-330460d7cbf4",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
        "attributes" : { }
      }, {
        "id" : "8080e286-0b01-45a7-8dd9-b1c361fd4286",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
        "attributes" : { }
      }, {
        "id" : "0e9749ed-66bd-401a-bf11-d3efa5cb1104",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
        "attributes" : { }
      }, {
        "id" : "c36f93ae-1a15-487c-8ba2-df1819a4b3d9",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
        "attributes" : { }
      }, {
        "id" : "4a780f37-14fa-42bf-9550-90de15efe216",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
        "attributes" : { }
      }, {
        "id" : "5236a4f8-ac1d-423b-bb55-432cc6c61386",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
        "attributes" : { }
      }, {
        "id" : "935cf561-1777-45f0-814b-a61290c8df4e",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "abaeb0ab-01a3-4058-8af1-a84d370e7e78",
    "name" : "admin",
    "path" : "/admin",
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { },
    "subGroups" : [ ]
  }, {
    "id" : "0dba2c13-16d5-4c5e-ad33-c99559a36029",
    "name" : "monitoring",
    "path" : "/monitoring",
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { },
    "subGroups" : [ ]
  }, {
    "id" : "b0f4519e-b11d-4a87-a2ae-8845b4fe9651",
    "name" : "pricing",
    "path" : "/pricing",
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { },
    "subGroups" : [ ]
  }, {
    "id" : "35ad8141-83de-41b7-b682-6f49558eb923",
    "name" : "user-manager",
    "path" : "/user-manager",
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { },
    "subGroups" : [ ]
  } ],
  "defaultRole" : {
    "id" : "bc6ca11f-5f5c-442f-8f9f-20991c0e13ae",
    "name" : "default-roles-pt",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "app"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "81cefa4f-7801-4fd5-8df8-d6ae9a5d545a",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/app/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/app/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "61b88251-80e4-4286-ad6a-fb45ce7f0a06",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/app/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/app/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "ab6293f0-7174-4545-8c65-5bbf94b43bad",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0bdc0013-0851-44bc-bedd-8a3b590f06c4",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0f00b5da-751f-4f6f-8fcf-5ebd5115de2b",
    "clientId" : "app-client",
    "name" : "App Client",
    "description" : "Spring/Angular Client",
    "rootUrl" : "http://localhost:4200",
    "adminUrl" : "http://localhost:4200",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8080/*", "http://app.localhost/*", "http://localhost:4200/*", "http://hoppscotch.localhost/*" ],
    "webOrigins" : [ "http://localhost:8080", "http://app.localhost", "http://localhost:4200", "http://hoppscotch.localhost" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "b44e93da-a14b-44a6-aee8-49769d28ac87",
      "name" : "Corporate key mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "corporateKey",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "corporateKey",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "openid", "offline_access", "microprofile-jwt", "allatclaims" ]
  }, {
    "id" : "ae993184-4df4-4114-8762-2f518ff8b5af",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c02e314e-b02d-4e6e-8775-4242535e4d28",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0269d7a6-4335-4efe-bdf1-43e5762da906",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/app/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/app/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "a3ffdfd8-3ff4-4a30-b449-e499e398a132",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "3e4f20bc-c854-4128-a48d-4f4978354a96",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "ed993fea-bbcb-47e4-ba55-3d84d5334e03",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9b4c5a86-f8fe-4376-8ed0-6a246f63bfa2",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "10502dab-0e41-4dbb-8a01-a3dd012456a3",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "375d7351-d664-4149-a976-3303b026ff53",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "14a914c6-d8d2-4b43-aea3-0c6a7cb888a2",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "3dd89631-ce8f-4043-94fe-7424468dda51",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "1004e69e-f407-4481-a289-c7fc50accafc",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "dbf4d7ef-0e86-4708-a07b-fab508ac1a5f",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "e4a27fdb-cacf-4b99-a5ba-c6a683724090",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7f5388e6-0755-4efa-ba67-1d9d52b648c1",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f5cecec0-fa99-4a32-bcc9-94a2b9c96d0f",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c2561ac7-17f3-42a4-b284-34fb63194ddd",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cd3ecd5d-2147-4e76-9bd2-d87e6533433f",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "78a84ffa-59c3-4ef1-93fb-851fa503ef2c",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bde15210-c4d8-4f94-bf4b-f3f15410aa3c",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "03cf130f-aebd-4775-9dd5-3a0832b8eb7c",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "00facbad-b6b7-4225-979f-56fa6861759d",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "58dc0a45-1d2d-4762-836c-9879e85d72ba",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "157655de-aad2-4a21-ba45-1db3dd911427",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e0a0113f-c770-48e2-868e-a6a3d4d52cee",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1b631c79-9a3d-4942-be05-65f6e49f216d",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2a1405a3-60b8-42b5-94be-a27eaf321226",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a3d1f23d-7999-4bc9-af0e-377eb9438227",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "e2158265-0a6d-4559-8da4-425b7b1bc0f8",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "b10b8f4a-4c95-4888-b692-a482f25fbd4f",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4d54984f-3491-4fb4-8797-27be5dfdc67d",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "63a9263f-89b5-4cfe-9f3f-52dccfe66a00",
    "name" : "openid",
    "description" : "OpenID Scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "0b1f457b-eed8-4251-8634-193904ce44bc",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "442bd9c2-d013-4a07-8fba-c843008e3427",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "d1f15cb7-70a8-4f57-a1e6-250693d96f6e",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "f41cb883-986a-45bd-a86b-ae420a882892",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "497611d8-d873-4d08-a078-e778e799f04c",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "68133571-0ada-453f-b5fb-b526412e0276",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "e859aafd-0454-4b0c-a55d-8a74de35d9d2",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "eb2d87c3-77db-4a21-9941-1ca85b59a93a",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "50818ac3-3c14-4695-a813-c9307c0f7888",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "036d7abc-6a9f-45ed-afd4-f7347f9ceeed",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "23c66e84-e89b-4592-bdd6-304e0b5cc672",
    "name" : "allatclaims",
    "description" : "ADFS compatibility scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    }
  } ],
  "defaultDefaultClientScopes" : [ "roles", "email", "web-origins", "role_list", "profile", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "phone", "address", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : {
    "starttls" : "",
    "auth" : "",
    "port" : "1025",
    "host" : "mailcatcher",
    "from" : "keycloak@example.com",
    "ssl" : ""
  },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "7785fbb3-a73c-4579-b935-45a5e5671c63",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "de104f04-2e94-43ee-8366-c4290d3f8209",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "2f8f60f4-960e-4e44-b9a2-a14ac85c3b02",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "f3ddaaed-93dd-4462-8a37-e61535049009",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "788b351a-eefb-4982-acfa-23366baa4a38",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "fbd58359-e467-4274-a7ee-5d9ac6ddf119",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "1eb62faa-0ca9-40be-be4f-ab0372ff826d",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "a2708115-cc56-450f-bbec-1e0e3c94b9dd",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "bc5705cc-0c62-429d-8833-3fee7e9feeba",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "a03fc4ad-a577-4cba-afd6-af72ea6bd114",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "a4115d64-34a7-4033-970e-d5fe370724c8" ],
        "secret" : [ "SIhwefwjfY2LkKUeEAwocuuNBIyXmdQc-42827T5kYBOGj5sgCOFbgD6IUPpquxps0DtoG4Q74QxPYdUURH7jw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "eb3840dc-93ed-4911-bbe0-c5202c39103f",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAqzqrGnwksTowjq6AoB3Io5CWBfa0Jw6846+WfLBU+cC/r0bix33iRHQ4DjtJ4hu+t0n6wPMi833gDVh5Qe6vHWdmzyA7Ny6jXCnXcexSpnQZc3huxC7BBi6FFz2A3dZkRGs4zswL84pKG84xRanNi449lxXsBTKKe0UxUg6jtZAPVi7phuUrwOghNVmt2BaUU2bQjmW1ZS0ley053Pf7oF7NB0LEwYPzfV8mRH4FjcCW5Udprj2c80ra7q276wImSo/mz01zk3DWz69bS9fO1gVyTx/zWXlwBdQfW9FVr9Pib4c6TyID1ewSb0fh117axH2kA4cK3e4bSx1lfsCiOwIDAQABAoIBAQCbJ+FNcXpqIXlIgPVKoVJibCyVINRjo+YjRsNNHxcQ7MiE0e3CqN3z+3+j3bN4MH3jZiTS3D4qd0Ajt6zAwsBpG348Z09hFGCwrbVspKDL9d3uFQ4BtP/xUwwEYBW6bn+Sw7nJIXoe54t5oKBjKJd5Qp2qnxGsL/zt8GfdnChZ5sDNhlP6w5NHuvUU/+OCquxqljzXxA6ZEeHZqlpGTeFA+zzVeVKEg0poJql9/86XZ358FRqh6p/f2DQKrt9VvoqJHxwx9fex7i8BQQ96+PN9uQQlbc25HG5P38UmNwncc1/T8G8lnfBegL++bmhmFNFPPldnEWvmcgy3Mb2LklhJAoGBAN+cCIw+CxZfbykpORswLZ9ZKhfX6Ee5adi9hNgrN5r/EeESeyGAJ3FTK3pEas0Vbq56vKBt+OTBi37HJNJ9x2NsON2cc8eaKWI5ptxFUKQwHL1eUTpl3AvFJSQkdMJbIchZ5UeQHr95hEohfJZLoC3fvm7bJtOHeRnrWlPImVftAoGBAMQIP7+zcacliI2wsJraTU8VxaiCIpR1nu3wQxBb0F9kugAAvMqpWlcnUDLFnl45OddCxIXKWSdi7f/k4F/oZlaiETHGwUPkmJ7UniyphhdYcfKbASeMAuxd1UmWbq9hI99qsF0EXqTtLR+kF6mfsuaW+NUUeTBm8j91OmLXJ03HAoGBAJgT6sxWtfu1VEjOPIR9M8oYPkSRFu0Q8SfzXRIX8m175JEKnKugGTM9uWgid/CbDvejif4iTRBngZPrpONzn9PCmro92ZB7DII9a3qLudiw0BsKtnvdItbuceAu2yoECOnWGdWd8wuOfaZdN/qP3JTWgxGqArIChR5XrssktwXRAoGAXma6jE6VxLBGejVEVs4ZvKP3c5Z3oJaj2mGBajdMuSOAjs/MGqxDXQUJkemowic8u3TjvqobFOSHSFun0YfRAJc7QIU+PLuw44vwQAHDGSr2dKZAgBLktX7aX32Z/8r/w29VTvXzveiZektDOeQ1+uVpHvOlCLIKppSFcWO7AbECgYBwjdQ4dPIi57HIuMG5RWFyRZi+OiglqB24//h6/sY3pa0C3AdmaVVa10Uji8LCblltDS8QB8lDbjjO3sMm0jQ/b8R8zzZpozuVQ5Qeg1X8mOOogdekA8ViS+TT/ujoVAO4dcVR0cPzf5A9VeWR+eHh+KfRGDWjCapwBjNst5BBVQ==" ],
        "certificate" : [ "MIICkzCCAXsCBgF/EnnM1DANBgkqhkiG9w0BAQsFADANMQswCQYDVQQDDAJwdDAeFw0yMjAyMTkxNDUyMjZaFw0zMjAyMTkxNDU0MDZaMA0xCzAJBgNVBAMMAnB0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqzqrGnwksTowjq6AoB3Io5CWBfa0Jw6846+WfLBU+cC/r0bix33iRHQ4DjtJ4hu+t0n6wPMi833gDVh5Qe6vHWdmzyA7Ny6jXCnXcexSpnQZc3huxC7BBi6FFz2A3dZkRGs4zswL84pKG84xRanNi449lxXsBTKKe0UxUg6jtZAPVi7phuUrwOghNVmt2BaUU2bQjmW1ZS0ley053Pf7oF7NB0LEwYPzfV8mRH4FjcCW5Udprj2c80ra7q276wImSo/mz01zk3DWz69bS9fO1gVyTx/zWXlwBdQfW9FVr9Pib4c6TyID1ewSb0fh117axH2kA4cK3e4bSx1lfsCiOwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBsgLVOrmbv5lV/sgX3F9ma139IWb9KneDBBFdUp4VwSBpG4cJo+orH/03n1wBAJ/yNVediW7A2EYHavZeTuUWVJ3FNipR/nzEqkhEu2Dl1AX1HwmVQMQM4BhkSwhJPgtYoFG3Pa8+5QvKKjDMsSrfPNeSVzfI6nAPgubBIArPPQwzG2v5KDdXne3fDGlCXDtdtHW1D+sWOukAj8cZSVaGtryuv/xp//5nhacSAHSxGB/Ym6Khw+KqzX66NEs0w9suxoiFcte+y/vUt9AsGztJbSjkRPNmVmTYraIAeSwYU16OeX3E+OqzVNbaziGagK7qhBkNG/ViQOx/goj1CFmjy" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "1e5fb3b2-a49a-48f9-a759-ef3ce1c64a05",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "fed25738-2e36-41db-b32c-c1ebe070237e" ],
        "secret" : [ "z0E-K2U557urEVIJYt9NTg" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "957cae04-8255-41eb-bfd7-3fd1ebbeaba2",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEApUGrJnRuDmOdMfkEHv1ZptFLMtl7wJmfNDbCep4WSFpcKC0nRuRH6MlEYo+zB5K5D38qdLPdVNBRgkAGBcJSlbU4HHJKaJpaVUuAxlBAHLJXW3m0iWbfxd8IPtN3+3pqkNifZt5bZLD9EFey2wIsdArJxiDYAXfcWTVvE9OrPNggJdEWwDww1PH4G0OXEzqPWVttlY6auwzkRvTtP7GGpd8zJ/RUA6NcAmpEg3160+lLsyDj+fUtY647J5l+t1RV5QrJ2jqTpx1RkBXLJCmxSOFOUpKQDXlYNi3DSolg8lQMCHIXgFjom3ZVXZcmYQjRup/esYwFKZW6aw8pp97kCwIDAQABAoIBABwT5z92YsihFjFKbO/S/euA/fTazNLxhwI5F5v7xi9u4t+UpGrAGJOttqfEYJe1zymZ4p3HfaCOcHrf4+YQmTWEf88dgBT7vMNnO672LZ5ykrMhH5KE3xpghacfCPC6YObRV2wD9aVLCQRA0kuxt9nTh2rZY7oEInUpxgCpYxvIGtjeXIdBgDU39PrfazlrAJgCXju7tyEIPSalwvbXSMMrvMKJdEX0fl0Qt3GvZF7PLgWF1i8hmWrEQF1KeXW1OeASm+NfOnSI0PnIHEYH+ND0Bg23FtvNXTVx+l1kVIZxzMNaKzcx8Uc+amVceb+Iqa4UkGkwA5aC9EeTQuZZpjkCgYEA2LoT0MwGR7/EvTkIMYPpRZdx00o6ejhM9X53zSaqKuerXFRpRo4C+8CMijF4SuYMiZ2cUHULdfEwtFZz79c35jhJvm3eIRTeZr2L5j5cm63xoPACkmovTcjM/T8pOCd6oI6d6pBnQzHTFo1VyyIUCCaIGNttr9ejz5yvOIl5wS0CgYEAwzPj9Q8V/Sjx3SHQlI5qaqI7fVLkyW2izKryqX+hRDCvHb72MWhGOP/hn987a7MzY/et64cgAfloGK3/cgqDTj1ah9NhEpdSCKCfx6aAnwto6Ao6uoIESX6popWf+6rFHUgOSFtOZvdKJGcHyRg7Cquy1TkJgkzxjd24VGakTRcCgYADKwUrIjBdUCJSGclS3/jC+anCSu175+LIG+coao5GPki0+s7nJyBICdKEGqEFh0Nbp6AnVO6r9LCfkjvzn5PDm8MIM5bxqNpvagnnfbXg2LQVhCylc0PpwSut8ARsO7eBLVSFn0LDKrFJPRup8n+Uduu6YUrDLUXJvSKakvfiqQKBgQCH36zDPZb+uutwE0OOxHsKcpaaK4MZOnlhoXR7y11Di+e4+t1/kqeesW4pzEceNoSFBzhGg64h8asl0qfGh87SPR6xAM/HExGE89mELT/GdTi2m7g5bprxVXtasm/DzCCcuzVF5Fh0j5lKMXVX4sfmK5G1nZgi3NAfAcB272NaTQKBgHX6b+1JDlJ6hdwnG2x4dVAgl2t2L/SJt+0FkhRXEfjVQlWXm5wDWtzHQj8K3n2Z5etbi5rm7mpdHiI1mM33ZWDW5dNMgMlASS0rCz284rQvXLpQi8zmip6RHzAKBS00XW4BIhcFVNX8hYJvtgyAS2gxuNrEcERlnZGHKuDSwaCm" ],
        "certificate" : [ "MIICkzCCAXsCBgF/EnnNPTANBgkqhkiG9w0BAQsFADANMQswCQYDVQQDDAJwdDAeFw0yMjAyMTkxNDUyMjZaFw0zMjAyMTkxNDU0MDZaMA0xCzAJBgNVBAMMAnB0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApUGrJnRuDmOdMfkEHv1ZptFLMtl7wJmfNDbCep4WSFpcKC0nRuRH6MlEYo+zB5K5D38qdLPdVNBRgkAGBcJSlbU4HHJKaJpaVUuAxlBAHLJXW3m0iWbfxd8IPtN3+3pqkNifZt5bZLD9EFey2wIsdArJxiDYAXfcWTVvE9OrPNggJdEWwDww1PH4G0OXEzqPWVttlY6auwzkRvTtP7GGpd8zJ/RUA6NcAmpEg3160+lLsyDj+fUtY647J5l+t1RV5QrJ2jqTpx1RkBXLJCmxSOFOUpKQDXlYNi3DSolg8lQMCHIXgFjom3ZVXZcmYQjRup/esYwFKZW6aw8pp97kCwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBBGbWEOev0d6VBDFaOTflU4Eexobb2Ag4reWekm4mgbG5Yi52VvzhqyVx9RVmJzFemfVmDyBitVsyFMU16BHv0cFpQq6GjDlVXggsiYJ2dwCdPJKSRyL2XtFkTNGlCHAypC0uvUD98nTJwC/ayiSmSev8mU8E6evs8vBoIVEaKeZPXAyfieUGrXlWUmm9lxNeuQFzdnaj3oqnifEymtOwzeG5Oh8JWrWoAw4raUicKoLfrpWc4FbogD+4lYPrLAxocHl0GBcTq9XyjaXdiIYwqYmETfZA8aReBU6aViDh/V0i5i9L+yPQ1c0TizW4VE21ZPfjoEOutvUNty8KYtwJr" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "2c2a52f7-048d-4e1a-a1b9-31f5be8e959a",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b53a7719-ea1a-4cca-933e-225a1546e7f9",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "998a47a0-c589-4cda-8633-6cf1adae1f49",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e60721c5-0493-404d-8e6b-06efd87498f1",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "272253db-b7f3-409c-a4a7-85e69f5e7f87",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "71658d95-77e0-4743-a25f-d10a3fd7b8ba",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3c0b311f-64a2-435e-9dd1-9da97d78820c",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3973bcdf-f204-402a-9195-8037085d0921",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7d662688-0209-45b3-8c70-c382ddd938b4",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f466d607-9ebe-4313-8dcb-5ca24cac7133",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8544c085-f54f-42bf-b83e-cf096f702b7c",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e1ef662e-853d-4f60-94ee-aeffb047e2eb",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "df5f0b8d-16bf-4889-8842-0df94810cf7f",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "470c9d69-c948-4c93-ac76-6de8f09fd979",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9eccbdb1-1a1b-406e-bf82-4d8a2c349208",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2e5f2cb4-1f3d-44a8-87d0-76a46cac628f",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b82328d1-8c3f-4463-ade0-a1ffe6c37191",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b2f7f82-f362-4586-bb91-ff0d738af2df",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "249ac750-fb59-41de-843f-2a7110429b95",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1b414bfb-3c6f-4c76-aae9-c3215a5b3015",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "7a8ff21f-6a64-4a35-95dd-a5083c0d85fa",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "c04ef2cf-3d40-4dda-a654-c235d34f8479",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "18.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}